apiVersion: v1
kind: Namespace
metadata:
  name: polaris
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: horizontal-elasticity-strat-controller
  namespace: polaris
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  # ClusterRoles are not namespaced
  name: horizontal-elasticity-strat-controller
rules:
  # Allow reading all Elasticity Strategy types
  # - apiGroups:
  #   - elasticity.polaris-slo-cloud.github.io
  #   resources:
  #   - "*"
  #   verbs:
  #   - get
  #   - watch
  #   - list

  # Allow reading supported Elasticity Strategy types
  - apiGroups:
      - elasticity.polaris-slo-cloud.github.io
    resources:
      - horizontalelasticitystrategies
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - elasticity.polaris-slo-cloud.github.io
    resources:
      - horizontalelasticitystrategies/status
    verbs:
      - get

  # Allow reading and updating all Scale subresources
  - apiGroups:
      - '*'
    resources:
      - '*/scale'
    verbs:
      - get
      - update

# Allow reading and updating all Deployments, StatefulSets, ReplicaSets, and DaemonSets
# - apiGroups:
#   - 'apps'
#   resources:
#   - deployments
#   - statefulsets
#   - replicasets
#   - daemonsets
#   verbs:
#   - get
#   - list
#   - update
#   - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
# Optionally, we could create a RoleBinding and to scope the permissions to a specific namespace
metadata:
  name: control-horizontal-elasticity-strategy
subjects:
  - kind: ServiceAccount
    name: horizontal-elasticity-strat-controller
    namespace: polaris
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: horizontal-elasticity-strat-controller
